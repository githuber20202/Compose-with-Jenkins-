pipeline {
    agent any
    
    environment {
        DOCKER_HUB_REPO = 'formy5000/resources_viewer'
        DOCKER_HUB_CREDS = credentials('dockerhub-credentials')
        GITOPS_REPO = 'https://github.com/githuber20202/jb-gitops.git'
        GITHUB_CREDS = credentials('github-credentials')
    }
    
    stages {
        stage('Workspace Cleanup') {
            steps {
                echo '🧹 Cleaning workspace...'
                deleteDir()
            }
        }
        
        stage('Checkout') {
            steps {
                echo '📦 Cloning from GitHub...'
                git branch: 'main', 
                    url: 'https://github.com/githuber20202/JB-PROJECT.git'
                
                script {
                    env.GIT_COMMIT_SHORT = sh(
                        script: "git rev-parse --short HEAD",
                        returnStdout: true
                    ).trim()
                    
                    echo "📍 Git commit: ${env.GIT_COMMIT_SHORT}"
                }
                
                sh 'ls -la'
            }
        }
        
        stage('Verify Files') {
            steps {
                echo '🔍 Checking required files...'
                sh '''
                    test -f app.py && echo "✅ app.py" || exit 1
                    test -f Dockerfile && echo "✅ Dockerfile" || exit 1
                    test -f requirements.txt && echo "✅ requirements.txt" || exit 1
                '''
            }
        }
        
        stage('Build & Push with Docker') {
            steps {
                echo '🔨 Building with Docker (simpler approach)...'
                script {
                    // Login
                    sh 'echo $DOCKER_HUB_CREDS_PSW | docker login -u $DOCKER_HUB_CREDS_USR --password-stdin'
                    
                    // Build
                    sh """
                        docker build -t ${DOCKER_HUB_REPO}:latest .
                        docker tag ${DOCKER_HUB_REPO}:latest ${DOCKER_HUB_REPO}:build-${BUILD_NUMBER}
                        docker tag ${DOCKER_HUB_REPO}:latest ${DOCKER_HUB_REPO}:sha-${env.GIT_COMMIT_SHORT}
                    """
                    
                    // Push
                    sh """
                        docker push ${DOCKER_HUB_REPO}:latest
                        docker push ${DOCKER_HUB_REPO}:build-${BUILD_NUMBER}
                        docker push ${DOCKER_HUB_REPO}:sha-${env.GIT_COMMIT_SHORT}
                    """
                    
                    // Logout
                    sh 'docker logout'
                    
                    echo '✅ Build & Push complete!'
                }
            }
        }
        
        stage('Update GitOps Repository') {
            steps {
                echo '📝 Updating Helm values.yaml with new image tag...'
                script {
                    // Clone GitOps repo
                    sh """
                        cd ${WORKSPACE}
                        rm -rf gitops-temp
                        git clone ${GITOPS_REPO} gitops-temp
                        cd gitops-temp
                        
                        # Update values.yaml with new tag
                        sed -i 's/tag: .*/tag: "sha-${env.GIT_COMMIT_SHORT}"/' aws-resources-viewer/values.yaml
                        
                        # Show the change
                        echo "Updated values.yaml:"
                        grep "tag:" aws-resources-viewer/values.yaml
                        
                        # Configure git
                        git config user.email "jenkins@jb-project.com"
                        git config user.name "Jenkins CI"
                        
                        # Commit and push
                        git add aws-resources-viewer/values.yaml
                        git commit -m "Update image tag to sha-${env.GIT_COMMIT_SHORT} (Build #${BUILD_NUMBER})"
                        
                        # Push with credentials
                        git push https://${GITHUB_CREDS_USR}:${GITHUB_CREDS_PSW}@github.com/githuber20202/jb-gitops.git main
                    """
                    
                    echo '✅ GitOps repository updated!'
                }
            }
        }

        stage('Test Pull') {
            steps {
                echo '🧪 Testing pull...'
                sh """
                    docker pull ${DOCKER_HUB_REPO}:latest
                    docker images | grep resources_viewer
                """
            }
        }
        
        stage('Cleanup Docker Images') {
            steps {
                echo '🧹 Cleaning local Docker images...'
                sh """
                    docker rmi ${DOCKER_HUB_REPO}:latest || true
                    docker rmi ${DOCKER_HUB_REPO}:build-${BUILD_NUMBER} || true
                    docker rmi ${DOCKER_HUB_REPO}:sha-${env.GIT_COMMIT_SHORT} || true
                """
            }
        }
    }
    
    post {
        success {
            echo """
            
            ╔═══════════════════════════════════════════╗
            ║     🎉 CI Pipeline SUCCESS! 🎉           ║
            ╚═══════════════════════════════════════════╝
            
            ═══════════════════════════════════════════
            📦 Docker Images Published:
            ═══════════════════════════════════════════
            
            Repository: ${DOCKER_HUB_REPO}
            
            Tags:
            ✓ latest
            ✓ build-${BUILD_NUMBER}
            ✓ sha-${env.GIT_COMMIT_SHORT}
            
            🔗 Docker Hub:
            https://hub.docker.com/r/${DOCKER_HUB_REPO}/tags
            
            ═══════════════════════════════════════════
            📝 GitOps Updated:
            ═══════════════════════════════════════════
            
            Repository: jb-gitops
            File: aws-resources-viewer/values.yaml
            New tag: sha-${env.GIT_COMMIT_SHORT}
            
            🔗 GitHub:
            https://github.com/githuber20202/jb-gitops
            
            ═══════════════════════════════════════════
            🚀 Next: Argo CD will sync automatically!
            ═══════════════════════════════════════════
            """
        }
        failure {
            echo "❌ Pipeline failed - check logs above"
        }
    }
}